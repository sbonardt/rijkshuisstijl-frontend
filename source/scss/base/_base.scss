/*
 * File:        _base.scss
 * Description: This base file contains all project VARIABLES and (custom) mixins 
 * Author:      Sebastiaan Bonardt - @_sebbon
 */

/*
 * Wesbite settings
 */
$base-font-family: "ROSans", Verdana, Sans-serif;
$site-max-width:70em;

/* Theme colors */
$baseFontColour:#222;
$baseFontHeaderColour:#333;
$baseLinkColour:#14467b;
$baseFirstThemeColour:#154273;//this colour is "Colour name 'e.g. Pink'" the main theme colour used in
$baseSecondThemeColour:#e5f0f9;//this colour is the secondary theme colour used in
$baseThirdThemeColour:#ddd;//this colour is the secondary theme colour used in

/* Generic helper colours */
$errorColour: #e32118;
$succesColour: #0a0;
$black: #222;
$grey: #ccc;
$lightGrey: #f3f3f3;
$darkGrey: #555;
$white: #fff;


/* 
 * Mixin: Breakpoints handling RWD including Old-IE (lte IE8)
 */
$old-ie: false !default;

/* Media Query Breakpoints */
$break-small: (481/16); //481px
$break-medium:(600/16); //768px
$break-large:(768/16); //768px
$break-xlarge:(960/16); //1024px
$break-wide: (1140/16); //1200px

/* Media Query Breakpoints */
$break-midmobile: 400; //400px = 25rem
$break-small: 481; //481px
$break-medium: 600; //600px
$break-large: 768; //700px custom break at 700 for the tabs between generic iupad break and 600
$break-xlarge: 960; //1024px
$break-wide: 1280; //1200px
$break-xwide: 1400; //1400px
$break-xxwide: 1600; //1600px
$break-r-u-insane: 1840; //1840px

$site-max-width:90rem; // insert your sane value here

@mixin respond-to($media) {
    @if $media == midmobile {
        @media only screen and (min-width: ($break-midmobile / 16) + 'em') { 
           @content;
        }
    } 
    @if $media == small-screens {
        @media only screen and (min-width: ($break-small / 16) + 'em') { 
           @content;  
        }
    } 
    @if $media == medium-screens {
        @media only screen and (min-width: ($break-medium / 16) + 'em') { 
           @content;
        }
    } 
    @if $media == large-screens {
        @media only screen and (min-width: ($break-large / 16) + 'em') { 
           @content;
        }
    }
    @if $media == up-to-large-screens {
        @media only screen and (max-width: (($break-large - 1) / 16) + 'em') { 
           @content;
        }
    }  
    @if $media == xlarge-screens {
        @media only screen and (min-width: ($break-xlarge / 16) + 'em') { 
           @content;
        }  
    }  
    @if $media == wide-screens {
        @media only screen and (min-width: ($break-wide / 16) + 'em') { 
           @content;
        }
    }
    @if $media == xwide-screens {
        @media only screen and (min-width: ($break-xwide / 16) + 'em') { 
           @content;
        } 
    }
    @if $media == xxwide-screens {
        @media only screen and (min-width: ($break-xxwide / 16) + 'em') { 
           @content;
        }
    }
    @if $media == r-u-insane {
        @media only screen and (min-width: ($break-r-u-insane / 16) + 'em') { 
           @content;
        }
    }
}


// Mixin: Font size rem and px mixin
@mixin font-size($size: 1, $line: $size * 1.5) {
    font-size     : $size + rem;
    line-height   : $line + rem;
}

// Mixin: Header font size rem and px mixin
@mixin header-font-size($size: 1, $line: $size * 1.2) {
    font-size     : $size + rem;
    line-height   : $line + rem;
}

// Mixin: REM to Px
@function remToPx($number) {
    @return #{$number}rem;
}

%clearfix, %group {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}