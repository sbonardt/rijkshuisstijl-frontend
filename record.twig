{% include '_header.twig' %}
        <article class="main-content">
            <a id="content" tabindex="0"></a>
            <div class="breadcrumb">
                <div class="inner-wrap">
                    <a href="/">Home</a>
                    <a href="/{{record.contenttype.slug}}">{{record.contenttype.slug|capitalize|replace({"-" : " "})}}</a>
                </div>
            </div>
            <div class="heading">
                <div class="inner-wrap">
                    <h1 data-bolt-field="title">{{ record.title }}{% if record.editlink() %}<span class="edit-link"><a href="{{ record.editlink() }}">{{ __('Edit') }}</a></span>{% endif %}</h1>       
                </div>
            </div> 
            
            <div class="content inner-wrap">
                <div class="column content-wrap"> 

                    {% if record.subtitle %}
                        <h3 data-bolt-field="subtitle">{{ record.subtitle }}</h3>
                    {% endif %}

                    {% for key,value in record.values if key not in ['id', 'slug', 'datecreated', 'datechanged', 'datepublish', 'datedepublish', 'username', 'status', 'title', 'subtitle', 'ownerid', 'templatefields', 'ordernumber', 'sectiontype' ] %}

                        {% if record.fieldtype(key) == "image" and value != "" %}
                            {% if record.image!="" %}
                                    <a href="{{ image(value) }}">
                                        <img src="{{ thumbnail(value, 640, 480) }}">
                                    </a>
                            {% endif %}

                            {% elseif record.fieldtype(key) == "imagelist" and attribute(record, key) is not empty %}
                            {# We do something tricky here: we need to get value of the list in the proper
                            way, so the value in actually returned as a list. Using {{ record.key }}
                            won't work, because there is no value 'key'. In your own templates you
                            will be able to use {{ record.yourfieldname }}. #}
                            {% set list = attribute(record, key) %}
                            {% for item in list %}
                                <a href="{{ image(item.filename) }}">
                                    <img src="{{ thumbnail(item.filename, 100,100) }}" alt="{{ item.title }}" title="{{ item.title }}">
                                </a>
                            {% endfor %}

                            {% elseif record.fieldtype(key) == "video" and value.responsive is defined %}
                            {{ value.responsive }}

                            {% elseif record.fieldtype(key) == "geolocation" and value.latitude is not empty %}
                            <div class="imageholder-wide">
                                <img src="http://maps.googleapis.com/maps/api/staticmap?center={{ value.latitude }},{{ value.longitude }}&amp;zoom=14&amp;size=617x300&amp;sensor=false&amp;markers={{ value.latitude }},{{ value.longitude }}">
                            </div>
                            <p>{{ value.formatted_address }}</p>

                            {% elseif record.fieldtype(key) in ['html', 'markdown', 'textarea'] %}
                            <div data-bolt-field="{{ key }}">{{ attribute(record, key) }}</div>

                            {% elseif record.fieldtype(key) == "select" %}
                            {# special case for 'select' fields.. If it's a multiple select, the value is an array. #}
                            <p><strong>{{ key }}: </strong>
                                {{ attribute(record, key)|join(", ") }}
                            </p>

                            {% elseif record.fieldtype(key) not in ['templateselect'] and attribute(record, key) is not empty %}
                            {# No special case defined for this type of field. We just output it, if it's
                            a simple scalar, and 'dump' it otherwise. #}
                            <p><strong>{{ key }}: </strong>
                                {% if attribute(record, key) is iterable %}
                                    {{ dump(attribute(record, key)) }}
                                    {% else %}
                                    {{ attribute(record, key) }}
                                {% endif %}
                            </p>
                        {%  endif %}
                    {% endfor %}
                    
                    {% set relatedrecords = record.related() %}
                    {% if relatedrecords is not empty %}
                    <p class="meta">{{ __('Related content:') }}
                    <ul>
                        {% for related in relatedrecords %}
                            <li><a href="{{ related.link }}">{{ related.title }}</a></li>
                            {%  endfor %}
                        </ul>
                    </p>
                    {% endif %}
                </div>
                {% include '_aside.twig' %}
            </div>
         </article>
{% include '_footer.twig' %}